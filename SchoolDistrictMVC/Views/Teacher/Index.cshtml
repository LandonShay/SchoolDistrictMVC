@model PagedList.IPagedList<SchoolDistrictMVC.Models.Teacher.TeacherListItem>
@using PagedList.Mvc;
<link href="~/Content/PagedList.css" rel="stylesheet" type="text/css" />
<link href="~/Content/Site.css" rel="stylesheet" type="text/css" />

@{ ViewBag.Title = "Index"; }

<h2>Teachers</h2>
<br />
    @if (TempData.ContainsKey("SaveResult"))
    {
    <div class="alert alert-success fade in" role="alert">
        <button type="button" class="close" data-dismiss="alert">
            <span>&times;</span>
        </button>
        @TempData["SaveResult"]
    </div>}

    <div class="createButton row">
        <div class="col-lg-4 col-md-5 col-sm-6 col-xs-12" id="colOne">
            <form action="/Teacher" method="get">
                <p>
                    <input id="SearchString" name="SearchString" type="text" value="" placeholder="Search">
                    <button type="submit" class="btn btn-default" id="searchButton">Search</button>
                </p>
            </form>
        </div>
        <div class="col-lg-1 col-md-2 col-sm-1 col-xs-1">
            <button class="btn btn-default dropdown-toggle" type="button" id="dropdownMenu" data-toggle="dropdown" aria-haspopup="true" aria-expanded="true">
                Sort By
                <span class="caret"></span>
            </button>
            <ul class="dropdown-menu" aria-labelledby="dropdownMenu">
                <li>@Html.ActionLink("Id", "Index", new { sortOrder = ViewBag.IDSort, currentFilter = ViewBag.CurrentFilter })</li>
                <li>@Html.ActionLink("Name", "Index", new { sortOrder = ViewBag.NameSort, currentFilter = ViewBag.CurrentFilter })</li>
                <li>@Html.ActionLink("Date of Birth", "Index", new { sortOrder = ViewBag.DateSort, currentFilter = ViewBag.CurrentFilter })</li>
                <li>@Html.ActionLink("School", "Index", new { sortOrder = ViewBag.SchoolSort, currentFilter = ViewBag.CurrentFilter })</li>
            </ul>
        </div>
        <div class="col-lg-7 col-md-5 col-sm-5 col-xs-0" id="colThree">
            <button type="button" class="btn addElement" onclick="location.href='@Url.Action("Create", "Teacher")'"><span class="glyphicon glyphicon-plus"></span> Create New Teacher</button>
        </div>
    </div>
<div class="tableBox">

<div class="table-responsive">
    <table class="table table-striped table-hover">
        <tr>
            <th>
                <p>Id</p>
            </th>
            <th>
                <p>Name</p>
            </th>
            <th>
                <p>Date of Birth</p>
            </th>
            <th>
                <p>School</p>
            </th>
            <th></th>
        </tr>

        @foreach (var item in Model)
        {
<tr>
    <td>
        @Html.DisplayFor(modelItem => item.Id)
    </td>
    <td>
        @Html.DisplayFor(modelItem => item.Name)
    </td>
    <td>
        @Html.DisplayFor(modelItem => item.DateOfBirth)
    </td>
    <td>
        @Html.DisplayFor(modelItem => item.School)
    </td>
    <td>
        @Html.ActionLink("Edit", "Edit", new { id = item.Id }) |
        @Html.ActionLink("Details", "Details", new { id = item.Id }) |
        @Html.ActionLink("Delete", "Delete", new { id = item.Id })
    </td>
</tr>
}
    </table>
</div>

</div>
<br />
    Page @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) of @Model.PageCount

    @Html.PagedListPager(Model, page => Url.Action("Index",
                        new { page, sortOrder = ViewBag.CurrentSort, currentFilter = ViewBag.CurrentFilter }))