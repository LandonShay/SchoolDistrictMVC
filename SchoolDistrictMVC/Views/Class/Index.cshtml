@model PagedList.IPagedList<SchoolDistrictMVC.Models.Class.ClassListItem>
@using PagedList.Mvc;
<link href="~/Content/PagedList.css" rel="stylesheet" type="text/css" />
<link href="~/Content/Site.css" rel="stylesheet" type="text/css" />
@{ ViewBag.Title = "Index"; }

<h2>Classes</h2>
<br />
@if (TempData.ContainsKey("SaveResult"))
{
<div class="alert alert-success fade in" role="alert">
    <button type="button" class="close" data-dismiss="alert">
        <span>&times;</span>
    </button>
    @TempData["SaveResult"]
</div>}

<div class="createButton row">
    <div class="col-lg-4 col-md-5 col-sm-6 col-xs-12" id="colOne">
        <form action="/Class" method="get">
            <p>
                <input id="SearchString" name="SearchString" type="text" value="" placeholder="Search">
                <button type="submit" class="btn btn-default" id="searchButton">Search</button>
            </p>
        </form>
    </div>
    <div class="col-lg-1 col-md-2 col-sm-1 col-xs-1">
        <button class="btn btn-default dropdown-toggle" type="button" id="dropdownMenu" data-toggle="dropdown" aria-haspopup="true" aria-expanded="true">
            Sort By
            <span class="caret"></span>
        </button>
        <ul class="dropdown-menu" aria-labelledby="dropdownMenu2">
            <li>@Html.ActionLink("Id", "Index", new { sortOrder = ViewBag.IDSort, currentFilter = ViewBag.CurrentFilter })</li>
            <li>@Html.ActionLink("Subject", "Index", new { sortOrder = ViewBag.SubjectSort, currentFilter = ViewBag.CurrentFilter })</li>
            <li>@Html.ActionLink("School", "Index", new { sortOrder = ViewBag.SchoolSort, currentFilter = ViewBag.CurrentFilter })</li>
            <li>@Html.ActionLink("Teacher", "Index", new { sortOrder = ViewBag.TeacherSort, currentFilter = ViewBag.CurrentFilter })</li>
        </ul>
    </div>
    <div class="col-lg-7 col-md-5 col-sm-5 col-xs-0" id="colThree">
        <button type="button" class="btn addElement" onclick="location.href='@Url.Action("Create", "Class")'"><span class="glyphicon glyphicon-plus"></span> Create New Class</button>
    </div>
</div>

<div class="tableBox">
    <div class="table-responsive">
        <table class="table table-striped table-hover">
            <tr>
                <th>
                    <p>Id</p>
                </th>
                <th>
                    <p>Name</p>
                </th>
                <th>
                    <p>Subject</p>
                </th>
                <th>
                    <p>School</p>
                </th>
                <th>
                    <p>Teacher</p>
                </th>
                <th>
                    <p># of Students</p>
                </th>
                <th></th>
            </tr>

            @foreach (var item in Model)
            {
<tr>
    <td>
        @Html.DisplayFor(modelItem => item.Id)
    </td>
    <td>
        @Html.DisplayFor(modelItem => item.Name)
    </td>
    <td>
        @Html.DisplayFor(modelItem => item.Subject)
    </td>
    <td>
        @Html.DisplayFor(modelItem => item.School)
    </td>
    <td>
        @Html.DisplayFor(modelItem => item.Teacher)
    </td>
    <td>
        @Html.DisplayFor(modelItem => item.NumberOfStudents)
    </td>
    <td>
        <div class="dropdown">
            <button class="btn btn-default dropdown-toggle" type="button" id="dropdownMenu1" data-toggle="dropdown" aria-haspopup="true" aria-expanded="true">
                Options
                <span class="caret"></span>
            </button>
            <ul class="dropdown-menu" aria-labelledby="dropdownMenu1">
                <li>@Html.ActionLink("Edit Class", "Edit", new { id = item.Id })</li>
                <li>@Html.ActionLink("Add Students", "AddToClassRoster", new { id = item.Id })</li>
                <li>@Html.ActionLink("View Class Roster", "ViewClassRoster", new { id = item.Id })</li>
                <li>@Html.ActionLink("Delete Class", "Delete", new { id = item.Id })</li>
            </ul>
        </div>

    </td>
</tr>}

        </table>
    </div>
</div>

<br />
    Page @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) of @Model.PageCount

    @Html.PagedListPager(Model, page => Url.Action("Index",
            new { page, sortOrder = ViewBag.CurrentSort, currentFilter = ViewBag.CurrentFilter }))
